{
  "hash": "11543d587b0716027d11528aa091c8f8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"UN INFO API\"\nformat: html\nexecute: \n  eval: false\nembed-resources: true\n---\n\n\n\n\nUse cases for the UN INFO API with R.\n\n[API main page](https://api.uninfo.org/docs/)\n\nWith support from: \n\nHadrien Jouet\n\n[Gitlab link](https://gitlab.tools.uninfo.org/dco/documentation)\n\n# Bearer token\n\nThis is the first step to start using the API.\n\nGet the bearer token to authenticate the requests.\n\nIf you have not saved your user name and password as environment variables, use the following code to set them in the login_body:\n\nemail = \"YOUR_EMAIL\"\npassword = \"YOUR_PASSWORD\"\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidyverse)\nlibrary(reactable)\n\nlogin_url <- \"https://api.uninfo.org/vx.y/user/login\"\n\n# Define the login credentials\nlogin_body <- list(\n     email = Sys.getenv(\"UNAPI_USERNAME\"), \n     password = Sys.getenv(\"UNAPI_PW\")\n)\n\n# Send the POST request\nlogin_response <- POST(login_url, body = login_body, encode = \"json\")\n\n# Extract the bearer token from the response\nlogin_content <- content(login_response, \"parsed\")\nbearer_token <- login_content$token\n\nprint(login_content)\nprint(bearer_token)\n```\n:::\n\n\n\n\nDefine the headers to use when necessary:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheaders <- add_headers(\n  accept = \"application/json\",\n  `Content-Type` = \"application/json\",\n  Authorization = paste(\"Bearer\", bearer_token)\n)\n```\n:::\n\n\n\n\n# Contact search\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/contact/search\"\nresponse <- POST(url)\n\nif (status_code(response) == 200) {\n  content <- content(response, \"parsed\", simplifyVector = TRUE)\n  print(content)\n} else {\n  print(paste(\"Request failed with status code\", status_code(response)))\n}\n\nresults <- content$results\n```\n:::\n\n\n\n\n# Contact search by id\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/contact/10495\"\n\nresponse <- GET(url, headers)\n\nif (status_code(response) == 200) {\n  content <- content(response, \"parsed\", simplifyVector = TRUE)\n  print(content)\n} else {\n  print(paste(\"Request failed with status code\", status_code(response)))\n}\n```\n:::\n\n\n\n\n# Plan search\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/search\"\n\nresponse <- POST(url, headers)\n\nif (status_code(response) == 200) {\n  content <- content(response, \"parsed\", simplifyVector = TRUE)\n} else {\n  print(paste(\"Request failed with status code\", status_code(response)))\n}\n\nresults <- content$results\n```\n:::\n\n\n\n\n# Plan details for selected plan\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/1193\"\n\nresponse <- GET(url, headers)\n\nif (status_code(response) == 200) {\n  content <- content(response, \"parsed\", simplifyVector = TRUE)\n} else {\n  print(paste(\"Request failed with status code\", status_code(response)))\n}\n\nsurveys <- content$planSurveys\nplanSurveyVersion <- surveys$planSurveyVersion\n\nentityPrototypes <- content$entityPrototypes\n```\n:::\n\n\n\n\n## entityPrototypes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nentityPrototypes |> \n    select(id, code, coreentityTypeId, name)\n```\n:::\n\n\n\n\n# Outcomes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/sustainableDevelopmentGoal/overviewReport?exclude=organizations&grouping=planEntity&planEntityType=OC&linkTypes=Gender%20Marker&linkTypes=Human%20Rights%20Marker&planIds=1193\"\n\nresponse <- GET(url, encode = \"json\")\ncontent <- content(response)\n\noutcomes <- data.frame()\n\nfor (i in 1:length(content)) {  \n\n  data <-   \n  data.frame(\n  id = content[[i]]$id,\n  parentId = content[[i]]$parentId,\n  parentName = content[[i]]$parentName,\n  name = content[[i]]$name,\n  code = content[[i]]$code,\n  description = content[[i]]$description,\n  startDate = content[[i]]$startDate,\n  endDate = content[[i]]$endDate)\n\n  outcomes <- bind_rows(outcomes, data)\n\n}\n\noutcomes |> \n    reactable()\n```\n:::\n\n\n\n\n\n# Outputs\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/sustainableDevelopmentGoal/overviewReport?exclude=organizations&grouping=planEntity&planEntityType=OU&linkTypes=Gender%20Marker&linkTypes=Human%20Rights%20Marker&planIds=1193\"\n\nresponse <- GET(url, encode = \"json\")\ncontent <- content(response)\n\noutputs <- data.frame()\n\nfor (i in 1:length(content)) {  \n\n  data <-   \n  data.frame(\n  id = content[[i]]$id,\n  parentId = content[[i]]$parentId,\n  parentName = content[[i]]$parentName,\n  name = content[[i]]$name,\n  code = content[[i]]$code,\n  description = content[[i]]$description,\n  startDate = content[[i]]$startDate,\n  endDate = content[[i]]$endDate,\n  metrics = I(list(content[[i]]$metrics)),\n  links = I(list(content[[i]]$links))\n  )\n\n  outputs <- bind_rows(outputs, data)\n\n}\n\noutputs |> \n    reactable()\n```\n:::\n\n\n\n\n# Get the suboutput ids for the selected plan\n\nRequires paginated search.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/entity/search\"\n\nbody <- list(\n  coreentityTypeIds = list(9),\n  planIds = list(1193)\n)\n\nsuboutput_id_list <- list()\n\nresponse <- POST(url, headers, body = body, encode = \"json\")\n\ntotal_pages <- content(response)$pagination$pages\n\nfor (page in 1:total_pages) {\n  body$page <- page\n  response <- POST(url, headers, body = body, encode = \"json\")  \n    for (i in 1:length(content(response)$results)) {\n  id_code <- ((page - 1) * 50) + i\n  suboutput_id_list[[id_code]] <- content(response)$results[[i]]$id\n    }\n}\n\nsuboutput_id_list <- suboutput_id_list |> unlist()\n```\n:::\n\n\n\n\n# Get the suboutput id and expenditure info\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/sustainableDevelopmentGoal/overviewReport?exclude=organizations&grouping=planEntity&planEntityType=SOU&linkTypes=Gender%20Marker&linkTypes=Human%20Rights%20Marker&planIds=1193\"\n\nresponse <- GET(url, headers, encode = \"json\")\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Sub-output id \n\nDrill down in the sub-output id\n\nFor one suboutput id\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/entity/92168\"\n\nresponse <- GET(url, headers)\n\nif (status_code(response) == 200) {\n  content <- content(response, \"parsed\", simplifyVector = TRUE)\n} else {\n  print(paste(\"Request failed with status code\", status_code(response)))\n}\n\nplanEntityVersion <- content$planEntityVersion\nentityPrototype <- content$entityPrototype\nproperties <- entityPrototype$properties\n\ndata <- \n    data.frame(\n    planEntityId = planEntityVersion$planEntityId,\n    code = planEntityVersion$code,\n    description = planEntityVersion$description,\n    name = planEntityVersion$name,\n    parentId = content$parentId,\n    parentName = content$parent$planEntityVersion$name,\n    startDate = planEntityVersion$startDate,\n    endDate = planEntityVersion$endDate,\n    countryId = I(list(content$locations$countryId)),\n    metrics = I(list(properties$metrics)),\n    organizations = I(list(content$organizations)),\n    humanRightsMarkers =    content$humanRightsMarkers$dataitemVersion$name,\n    genderMarkers =     content$genderMarkers$dataitemVersion$name,\n    sustainingPeaceMarkers = I(list(content$sustainingPeaceMarkers$dataitemVersion$name)),\n    qcprFunctions = I(list(content$qcprFunctions$dataitemVersion)),\n    goal_id = I(list(content$planEntitySdgs$goalId)),\n    target_id = I(list(content$planEntitySdgs$targetId)),\n    narratives = I(list(content$planEntityNarratives$planEntityNarrativeVersion$value))\n)\n\ndata |> reactable()\n```\n:::\n\n\n\n\n# All suboutputs in long format\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/sustainableDevelopmentGoal/overviewReport?exclude=organizations&planIds=1193\"\n\ncontent <- fromJSON(url)\n\ncontent2 <- \n    content |> \n    unnest(metrics) |> \n    rename(goal_id = id,\n           goal_name = name) |>\n    unnest(links) |> \n    rename(marker_id = id,\n           marker_name = name) |>\n    unnest(items) |> \n    rename(item_id = id,\n           item_name = name) |>\n    unnest(activities)\n\ncontent2 |> reactable()\ncontent2 |> distinct(id) |> nrow()\n```\n:::\n\n\n\n\n# Markers and financials\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/sustainableDevelopmentGoal/overviewReport?exclude=organizations&grouping=planEntity&planEntityType=SOU&linkTypes=Gender%20Marker&linkTypes=Human%20Rights%20Marker&Sustaining%20Peace%20MarkerHumanitarian%20Marker&planIds=1193\"\n\ncontent <- fromJSON(url)\n\ncontent$links\n\ncontent2 <- \n    content |> \n    unnest(metrics) |> \n    rename(suboutput_id = id,\n           suboutput_name = name) |>\n    unnest(links) |> \n    rename(marker_id = id,\n           marker_name = name) |>\n    unnest(items) |> \n    rename(item_id = id,\n           item_name = name) |>\n    unnest(activities)\n\ncontent2 |> reactable()\ncontent2 |> distinct(suboutput_id) |> nrow()\n```\n:::\n\n\n\n\n# All common indicators\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/public/entity/search\"\n\nresponse <- POST(url)\n\ncontent(response)\n```\n:::\n\n\n\n\n# Form search paginated\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/form/search\"\nresponse <- POST(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Form search by id\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/form/972\"\nresponse <- GET(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Indicator search paginated\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/indicator/search\"\nresponse <- POST(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Data item search paginated\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/dataitem/search\" \nresponse <- POST(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Country search paginated\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/country/search\"\nresponse <- POST(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Completion search paginated\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/completion/search?\"\nresponse <- POST(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Workspace search paginated\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/workspace/search\"\nresponse <- POST(url, headers)\ncontent <- content(response)\n```\n:::\n\n\n\n\n# Plan public\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/public/1193\"\nresponse <- GET(url, headers)\ncontent <- content(response)\n\ncontent$planEntities\n```\n:::\n\n\n\n\n# Report on suboutputs with missing information and aggregated statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://api.uninfo.org/vx.y/plan/evaluate/1193\"\nresponse <- GET(url, headers)\ncontent <- content(response)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}