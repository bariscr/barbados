{"title":"SDG Indicators for Homicide in Barbados MCO","markdown":{"yaml":{"title":"SDG Indicators for Homicide in Barbados MCO","author":"","format":{"dashboard":{"embed-resources":true}},"execute":{"echo":false,"freeze":"auto"}},"headingText":"Tabset","headingAttr":{"id":"","classes":["tabset"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: Library\nlibrary(dplyr)\nlibrary(htmltools)\nlibrary(reactable)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(plotly)\n```\n\n\n```{r}\n#| label: Countries selection\ncountries <- readRDS(\"data/countries.rds\")\nbarbados_mco_country_code_list <- \n    c(660, 28, 52, 212, 308, 500, 659, 662, 670, 92)\ncountries_bmco <- \n    readRDS(\"data/countries_barbados_mco.rds\") |> \n    mutate(country.code = as.character(country.code))\n```\n\n\n```{r}\n#| label: Data\nsdg_series <- readRDS(\"data/sdg_series.rds\")\n\nsdg_indicators <- readRDS(\"data/sdg_indicators.rds\")\n\nsdg_data <- \n    readRDS(\"data/sdg_caribbean.rds\") |> \n     filter(!is.na(value)) |> \n     filter(value != \"NaN\") \n```\n\n\n```{r}\nsdg_series <- \n    sdg_indicators |> \n    select(description, series) |>\n    rename(indicator_description = description) |>\n    unnest(series)\n```\n\n\n```{r}\nsdg_homicide_data <- \nsdg_data |> \n  filter(geoAreaCode %in% barbados_mco_country_code_list) |>\n  filter(series %in% c(\"VC_IHR_PSRC\", \"VC_IHR_PSRCN\")) |>\n  left_join(countries_bmco, by = c(\"geoAreaCode\" = \"country.code\"))  |> \n  select(name, timePeriodStart, series, Sex, value) |> \n  left_join(sdg_series, by = c(\"series\" = \"code\")) |> \n   select(name, timePeriodStart,  indicator, series, description, Sex, value) \n\n```\n\n\n#### Proportion\n\n```{r}\nselected_indicator <- \"VC_IHR_PSRC\"\n\nselected_indicator_name <- \nsdg_series |> \n  filter(code == selected_indicator) |> \n  pull(description) |> \n  unique()\n\np <- plot_ly()\n\np_data <- \n  sdg_homicide_data %>%\n  filter(series == selected_indicator) %>%\n  select(-c(indicator, series)) %>%\n  mutate(value = as.numeric(value),\n         timePeriodStart = as.factor(timePeriodStart)) %>%\n  rename(sex = Sex) %>%\n  arrange(timePeriodStart)\n\n# Re-level the factor to ensure consistent order\np_data$timePeriodStart <- factor(p_data$timePeriodStart, levels = unique(p_data$timePeriodStart))\n\n# Initialize a list to store visibility vectors for each dropdown option\nvisibility_list <- list()\n\n# Set an initial name to be visible\ninitial_name <- unique(p_data$name)[1]\n\n# Create traces and store visibility vectors\ntrace_index <- 1\nfor (name in unique(p_data$name)) {\n  for (sex in unique(p_data$sex)) {\n    trace_data <- p_data %>% filter(name == !!name, sex == !!sex)\n    p <- p %>%\n      add_trace(\n        data = trace_data,\n        y = ~value,\n        x = ~factor(timePeriodStart, levels = unique(p_data$timePeriodStart)), # Ensure consistent factor levels\n        name = paste(name, sex),  # Combine name and sex for the trace name\n        legendgroup = sex,  # Grouping by sex for the legend\n        color = ~sex,\n        mode = \"lines+markers\",\n        type = 'scatter',\n        hoverinfo = 'text',\n        text = ~paste0(name, \" \", sex, \" \", timePeriodStart, \" \", value),\n        textposition = 'auto',\n        visible = name == initial_name,\n        showlegend = TRUE # Always show legend for sex\n      )\n    \n    # Update visibility vector for the current name\n    if (is.null(visibility_list[[name]])) {\n      visibility_list[[name]] <- rep(FALSE, length(unique(p_data$name)) * length(unique(p_data$sex)))\n    }\n    visibility_list[[name]][trace_index] <- TRUE\n    trace_index <- trace_index + 1\n  }\n}\n\n# Customize the layout with the dropdown menu\ndropdown_buttons <- lapply(names(visibility_list), function(name) {\n  list(\n    method = \"restyle\",\n    args = list(\"visible\", visibility_list[[name]]),\n    label = name)\n})\n\n# Apply layout and dropdown menu\np <- p %>%\n  layout(\n    title = list(text = selected_indicator_name, standoff = 20),\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = list(text = \"Per 100,000 population\", standoff = 10)),\n    margin = list(l = 100, t = 200, b = 100, r = 10),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.3,\n        y = 1.1 # move the dropdown higher on the plot\n      )\n    )\n  )\n\n# Display the plot\np\n\n```\n\n#### Number\n\n```{r}\nselected_indicator <- \"VC_IHR_PSRCN\"\n\nselected_indicator_name <- \nsdg_series |> \n  filter(code == selected_indicator) |> \n  pull(description) |> \n  unique()\n\np <- plot_ly()\n\np_data <- \n  sdg_homicide_data %>%\n  filter(series == selected_indicator) %>%\n  select(-c(indicator, series)) %>%\n  mutate(value = as.numeric(value),\n         timePeriodStart = as.factor(timePeriodStart)) %>%\n  rename(sex = Sex) %>%\n  arrange(timePeriodStart)\n\n# Re-level the factor to ensure consistent order\np_data$timePeriodStart <- factor(p_data$timePeriodStart, levels = unique(p_data$timePeriodStart))\n\n# Initialize a list to store visibility vectors for each dropdown option\nvisibility_list <- list()\n\n# Set an initial name to be visible\ninitial_name <- unique(p_data$name)[1]\n\n# Create traces and store visibility vectors\ntrace_index <- 1\nfor (name in unique(p_data$name)) {\n  for (sex in unique(p_data$sex)) {\n    trace_data <- p_data %>% filter(name == !!name, sex == !!sex)\n    p <- p %>%\n      add_trace(\n        data = trace_data,\n        y = ~value,\n        x = ~factor(timePeriodStart, levels = unique(p_data$timePeriodStart)), # Ensure consistent factor levels\n        name = paste(name, sex),  # Combine name and sex for the trace name\n        legendgroup = sex,  # Grouping by sex for the legend\n        color = ~sex,\n        mode = \"lines+markers\",\n        type = 'scatter',\n        hoverinfo = 'text',\n        text = ~paste0(name, \" \", sex, \" \", timePeriodStart, \" \", value),\n        textposition = 'auto',\n        visible = name == initial_name,\n        showlegend = TRUE # Always show legend for sex\n      )\n    \n    # Update visibility vector for the current name\n    if (is.null(visibility_list[[name]])) {\n      visibility_list[[name]] <- rep(FALSE, length(unique(p_data$name)) * length(unique(p_data$sex)))\n    }\n    visibility_list[[name]][trace_index] <- TRUE\n    trace_index <- trace_index + 1\n  }\n}\n\n# Customize the layout with the dropdown menu\ndropdown_buttons <- lapply(names(visibility_list), function(name) {\n  list(\n    method = \"restyle\",\n    args = list(\"visible\", visibility_list[[name]]),\n    label = name)\n})\n\n# Apply layout and dropdown menu\np <- p %>%\n  layout(\n    title = list(text = selected_indicator_name, standoff = 20),\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = list(text = \"Number\", standoff = 10)),\n    margin = list(l = 100, t = 200, b = 100, r = 10),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.3,\n        y = 1.1 # move the dropdown higher on the plot\n      )\n    )\n  )\n\n# Display the plot\np\n\n```","srcMarkdownNoYaml":"\n\n\n```{r}\n#| label: Library\nlibrary(dplyr)\nlibrary(htmltools)\nlibrary(reactable)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(plotly)\n```\n\n\n```{r}\n#| label: Countries selection\ncountries <- readRDS(\"data/countries.rds\")\nbarbados_mco_country_code_list <- \n    c(660, 28, 52, 212, 308, 500, 659, 662, 670, 92)\ncountries_bmco <- \n    readRDS(\"data/countries_barbados_mco.rds\") |> \n    mutate(country.code = as.character(country.code))\n```\n\n\n```{r}\n#| label: Data\nsdg_series <- readRDS(\"data/sdg_series.rds\")\n\nsdg_indicators <- readRDS(\"data/sdg_indicators.rds\")\n\nsdg_data <- \n    readRDS(\"data/sdg_caribbean.rds\") |> \n     filter(!is.na(value)) |> \n     filter(value != \"NaN\") \n```\n\n\n```{r}\nsdg_series <- \n    sdg_indicators |> \n    select(description, series) |>\n    rename(indicator_description = description) |>\n    unnest(series)\n```\n\n\n```{r}\nsdg_homicide_data <- \nsdg_data |> \n  filter(geoAreaCode %in% barbados_mco_country_code_list) |>\n  filter(series %in% c(\"VC_IHR_PSRC\", \"VC_IHR_PSRCN\")) |>\n  left_join(countries_bmco, by = c(\"geoAreaCode\" = \"country.code\"))  |> \n  select(name, timePeriodStart, series, Sex, value) |> \n  left_join(sdg_series, by = c(\"series\" = \"code\")) |> \n   select(name, timePeriodStart,  indicator, series, description, Sex, value) \n\n```\n\n### Tabset {.tabset}\n\n#### Proportion\n\n```{r}\nselected_indicator <- \"VC_IHR_PSRC\"\n\nselected_indicator_name <- \nsdg_series |> \n  filter(code == selected_indicator) |> \n  pull(description) |> \n  unique()\n\np <- plot_ly()\n\np_data <- \n  sdg_homicide_data %>%\n  filter(series == selected_indicator) %>%\n  select(-c(indicator, series)) %>%\n  mutate(value = as.numeric(value),\n         timePeriodStart = as.factor(timePeriodStart)) %>%\n  rename(sex = Sex) %>%\n  arrange(timePeriodStart)\n\n# Re-level the factor to ensure consistent order\np_data$timePeriodStart <- factor(p_data$timePeriodStart, levels = unique(p_data$timePeriodStart))\n\n# Initialize a list to store visibility vectors for each dropdown option\nvisibility_list <- list()\n\n# Set an initial name to be visible\ninitial_name <- unique(p_data$name)[1]\n\n# Create traces and store visibility vectors\ntrace_index <- 1\nfor (name in unique(p_data$name)) {\n  for (sex in unique(p_data$sex)) {\n    trace_data <- p_data %>% filter(name == !!name, sex == !!sex)\n    p <- p %>%\n      add_trace(\n        data = trace_data,\n        y = ~value,\n        x = ~factor(timePeriodStart, levels = unique(p_data$timePeriodStart)), # Ensure consistent factor levels\n        name = paste(name, sex),  # Combine name and sex for the trace name\n        legendgroup = sex,  # Grouping by sex for the legend\n        color = ~sex,\n        mode = \"lines+markers\",\n        type = 'scatter',\n        hoverinfo = 'text',\n        text = ~paste0(name, \" \", sex, \" \", timePeriodStart, \" \", value),\n        textposition = 'auto',\n        visible = name == initial_name,\n        showlegend = TRUE # Always show legend for sex\n      )\n    \n    # Update visibility vector for the current name\n    if (is.null(visibility_list[[name]])) {\n      visibility_list[[name]] <- rep(FALSE, length(unique(p_data$name)) * length(unique(p_data$sex)))\n    }\n    visibility_list[[name]][trace_index] <- TRUE\n    trace_index <- trace_index + 1\n  }\n}\n\n# Customize the layout with the dropdown menu\ndropdown_buttons <- lapply(names(visibility_list), function(name) {\n  list(\n    method = \"restyle\",\n    args = list(\"visible\", visibility_list[[name]]),\n    label = name)\n})\n\n# Apply layout and dropdown menu\np <- p %>%\n  layout(\n    title = list(text = selected_indicator_name, standoff = 20),\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = list(text = \"Per 100,000 population\", standoff = 10)),\n    margin = list(l = 100, t = 200, b = 100, r = 10),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.3,\n        y = 1.1 # move the dropdown higher on the plot\n      )\n    )\n  )\n\n# Display the plot\np\n\n```\n\n#### Number\n\n```{r}\nselected_indicator <- \"VC_IHR_PSRCN\"\n\nselected_indicator_name <- \nsdg_series |> \n  filter(code == selected_indicator) |> \n  pull(description) |> \n  unique()\n\np <- plot_ly()\n\np_data <- \n  sdg_homicide_data %>%\n  filter(series == selected_indicator) %>%\n  select(-c(indicator, series)) %>%\n  mutate(value = as.numeric(value),\n         timePeriodStart = as.factor(timePeriodStart)) %>%\n  rename(sex = Sex) %>%\n  arrange(timePeriodStart)\n\n# Re-level the factor to ensure consistent order\np_data$timePeriodStart <- factor(p_data$timePeriodStart, levels = unique(p_data$timePeriodStart))\n\n# Initialize a list to store visibility vectors for each dropdown option\nvisibility_list <- list()\n\n# Set an initial name to be visible\ninitial_name <- unique(p_data$name)[1]\n\n# Create traces and store visibility vectors\ntrace_index <- 1\nfor (name in unique(p_data$name)) {\n  for (sex in unique(p_data$sex)) {\n    trace_data <- p_data %>% filter(name == !!name, sex == !!sex)\n    p <- p %>%\n      add_trace(\n        data = trace_data,\n        y = ~value,\n        x = ~factor(timePeriodStart, levels = unique(p_data$timePeriodStart)), # Ensure consistent factor levels\n        name = paste(name, sex),  # Combine name and sex for the trace name\n        legendgroup = sex,  # Grouping by sex for the legend\n        color = ~sex,\n        mode = \"lines+markers\",\n        type = 'scatter',\n        hoverinfo = 'text',\n        text = ~paste0(name, \" \", sex, \" \", timePeriodStart, \" \", value),\n        textposition = 'auto',\n        visible = name == initial_name,\n        showlegend = TRUE # Always show legend for sex\n      )\n    \n    # Update visibility vector for the current name\n    if (is.null(visibility_list[[name]])) {\n      visibility_list[[name]] <- rep(FALSE, length(unique(p_data$name)) * length(unique(p_data$sex)))\n    }\n    visibility_list[[name]][trace_index] <- TRUE\n    trace_index <- trace_index + 1\n  }\n}\n\n# Customize the layout with the dropdown menu\ndropdown_buttons <- lapply(names(visibility_list), function(name) {\n  list(\n    method = \"restyle\",\n    args = list(\"visible\", visibility_list[[name]]),\n    label = name)\n})\n\n# Apply layout and dropdown menu\np <- p %>%\n  layout(\n    title = list(text = selected_indicator_name, standoff = 20),\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = list(text = \"Number\", standoff = 10)),\n    margin = list(l = 100, t = 200, b = 100, r = 10),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.3,\n        y = 1.1 # move the dropdown higher on the plot\n      )\n    )\n  )\n\n# Display the plot\np\n\n```"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"output-file":"human-rights.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","page-layout":"custom","title":"SDG Indicators for Homicide in Barbados MCO","author":""},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}